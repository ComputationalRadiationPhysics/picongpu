language none
sudo false
dist trusty

cache
  apt true
  directories
    - $HOME.cachespack
    - $HOME.cachecmake-3.11.4
  pip true

addons
  apt
    sources
      - ubuntu-toolchain-r-test
    packages
      - g++-4.9
      - gfortran-4.9  # spack OpenMPI dependency
      - environment-modules
      - openmpi-bin
      - libopenmpi-dev
      # clang 5.0.0 is pre-installed
      # - clang-tidy-3.9

env
  global
    - SPACK_ROOT $HOME.cachespack
    - PATH $PATH$HOME.cachespackbin
    - CXXFLAGS -std=c++11

install
  #############################################################################
  # PMacc CPU-only dependencies                                               #
  #############################################################################
  - SPACK_FOUND=$(which spack devnull && { echo 0; }  { echo 1; })
  - if [ $SPACK_FOUND -ne 0 ]; then
      mkdir -p $SPACK_ROOT &&
      git clone --depth 50 httpsgithub.comspackspack.git $SPACK_ROOT &&
      echo -e confign  build_jobs 2  $SPACK_ROOTetcspackconfig.yaml &&
      echo -e packagesn  cmaken    version [3.11.4]n    pathsn      cmake@3.11.4 hometravis.cachecmake-3.11.4n    buildable False  $SPACK_ROOTetcspackpackages.yaml;
    fi
  - spack compiler add
  # required dependencies - CMake 3.11.4
  - if [ $TRAVIS_OS_NAME == linux ]; then
      if [ ! -f $HOME.cachecmake-3.11.4bincmake ]; then
        wget -O cmake.sh httpscmake.orgfilesv3.11cmake-3.11.4-Linux-x86_64.sh &&
        sh cmake.sh --skip-license --exclude-subdir --prefix=$HOME.cachecmake-3.11.4 &&
        rm cmake.sh;
      fi;
    elif [ $TRAVIS_OS_NAME == osx ]; then
      if [ ! -d ApplicationsCMake.appContents ]; then
        curl -L -s -o cmake.dmg httpscmake.orgfilesv3.11cmake-3.11.4-Darwin-x86_64.dmg &&
        yes  hdiutil mount cmake.dmg &&
        sudo cp -R Volumescmake-3.11.4-Darwin-x86_64CMake.app Applications &&
        hdiutil detach devdisk1s1 &&
        rm cmake.dmg;
      fi;
    fi
  - travis_wait spack install
      cmake
      $COMPILERSPEC
  # required dependencies - Boost 1.65.1
  - travis_wait spack install
      boost@1.65.1~date_time~graph~iostreams~locale~log~random~thread~timer~wave
      $COMPILERSPEC
  - spack clean -a
  - source etcprofile &&
    source $SPACK_ROOTsharespacksetup-env.sh
  - spack load cmake
  - spack load boost $COMPILERSPEC

jobs
  fast_finish true
  include
    - stage 'Target Branch'
      install skip
      script
        #############################################################################
        # Disallow PRs to `ComputationalRadiationPhysicspicongpu` branch `master`  #
        # if not an other mainline branch such as `dev` or `release-...`            #
        #############################################################################
        - . testcorrectBranchPR
    - &style-python
      stage 'Style'
      language python
      python 2.7
      install pip install -U flake8
      script
        #############################################################################
        # Test Python Files for PEP8 conformance                                    #
        #############################################################################
        - flake8 --exclude=thirdParty .
    -  style-python
      python 3.6
    - install skip
      language cpp
      script
        #############################################################################
        # Conformance with Alpaka Do not write __global__ CUDA kernels directly    #
        #############################################################################
        - testhasCudaGlobalKeyword includepmacc
        - testhasCudaGlobalKeyword sharepmaccexamples
        - testhasCudaGlobalKeyword includepicongpu
        - testhasCudaGlobalKeyword sharepicongpuexamples

        #############################################################################
        # Disallow end-of-line (EOL) white spaces                                   #
        #############################################################################
        - testhasEOLwhiteSpace

        #############################################################################
        # Disallow TABs, use white spaces                                           #
        #############################################################################
        - testhasTabs

        #############################################################################
        # Disallow non-ASCII in source files and scripts                            #
        #############################################################################
        - testhasNonASCII

        #############################################################################
        # Disallow spaces before pre-compiler macros                                #
        #############################################################################
        - testhasSpaceBeforePrecompiler

        #############################################################################
        # Enforce angle brackets ... for includes of external library files       #
        #############################################################################
        - testhasExtLibIncludeBrackets include boost
        - testhasExtLibIncludeBrackets include alpaka
        - testhasExtLibIncludeBrackets include cupla
        - testhasExtLibIncludeBrackets include splash
        - testhasExtLibIncludeBrackets include mallocMC
        - testhasExtLibIncludeBrackets includepicongpu pmacc
        - testhasExtLibIncludeBrackets sharepicongpuexamples pmacc
        - testhasExtLibIncludeBrackets sharepicongpuexamples boost
        - testhasExtLibIncludeBrackets sharepicongpuexamples alpaka
        - testhasExtLibIncludeBrackets sharepicongpuexamples cupla
        - testhasExtLibIncludeBrackets sharepicongpuexamples splash
        - testhasExtLibIncludeBrackets sharepicongpuexamples mallocMC
        - testhasExtLibIncludeBrackets sharepmaccexamples pmacc
    - &static-code-python
      stage 'Static Code Analysis'
      language python
      python 2.7
      install pip install -U pyflakes
      script
        #############################################################################
        # Warnings, unused code, etc.                                               #
        #############################################################################
        - pyflakes .
    -  static-code-python
      python 3.6
    - &test-cpp-unit
      stage 'C++ Unit Tests'
      language cpp
      env [ COMPILERSPEC='%gcc@4.9.4' ]
      before_install
        - export CXX=g++-4.9
        - export CC=gcc-4.9
        - export FC=gfortran-4.9
      script
        - $CXX --version
        - $CC --version
        - $FC --version
        #############################################################################
        # PMacc CPU-only tests                                                      #
        #############################################################################
        - mkdir -p $HOMEbuild
        - cd $HOMEbuild
        - cmake $TRAVIS_BUILD_DIRincludepmacc
                -DALPAKA_ACC_CPU_B_OMP2_T_SEQ_ENABLE=ON
        - make -j 2
        # - make test  # reduce memory and RT costs first
    -  test-cpp-unit
      env [ COMPILERSPEC='%clang@5.0.0' ]
      before_install
        - export CXX=clang++
        - export CC=clang
        - export FC=gfortran-4.9