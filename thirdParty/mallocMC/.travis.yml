language: cpp

sudo: required

dist: bionic

cache:
  apt: true
  directories:
    - $HOME/.cache/cmake-3.15.0

compiler:
  - gcc

env:
  global:
    - INSTALL_DIR=~/mylibs
    - CXXFLAGS="-Werror"
    - PATH: $HOME/.cache/cmake-3.15.0/bin:$PATH
    
install:
  if [ ! -f $HOME/.cache/cmake-3.15.0/bin/cmake ]; then
    wget -O cmake.sh https://cmake.org/files/v3.15/cmake-3.15.0-Linux-x86_64.sh &&
    sh cmake.sh --skip-license --exclude-subdir --prefix=$HOME/.cache/cmake-3.15.0 &&
    rm cmake.sh;
  fi;

script:
  - mkdir build_tmp && cd build_tmp
  - CXX=g++-5 && CC=gcc-5
  - cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR $TRAVIS_BUILD_DIR
  - make
  - make install
  - make examples
  - make tests

before_script:
  - cat /etc/apt/sources.list
  - cat /etc/apt/sources.list.d/*
  - sudo apt-add-repository multiverse
  - sudo apt-get update -qq
  - sudo dpkg --configure -a
  - sudo apt-get install -f -qq
  - sudo dpkg --get-selections | grep hold || { echo "All packages OK."; }
  - sudo apt-get install -qq build-essential g++-5
  - gcc-5 --version && g++-5 --version # 5.5.0
  - apt-cache search nvidia-*
  - sudo apt-get install -qq nvidia-common
  - sudo apt-get install -qq nvidia-cuda-dev nvidia-cuda-toolkit # 9.1.85
  - sudo apt-get install -qq libboost-dev # 1.65.1
  - sudo find /usr/ -name libcuda*.so
  - cmake --version

after_script:
  - ls -halR $INSTALL_DIR

