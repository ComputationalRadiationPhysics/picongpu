/**
 * Copyright 2013-2016 Axel Huebl, Heiko Burau, Rene Widera, Felix Schmitt,
 *                     Richard Pausch
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */



#pragma once

#include "particles/gasProfiles/profiles.def"
/* preprocessor struct generator */
#include "preprocessor/struct.hpp"

namespace picongpu
{
namespace SI
{
    /** The maximum density in particles per m^3 in the gas distribution
     *  unit: ELEMENTS/m^3
     *
     * He (2e- / Atom ) with 1.e15 He / m^3
     *                      = 2.e15 e- / m^3 */
    constexpr float_64 GAS_DENSITY_SI = 1.e25;

}

//##########################################################################
//############## special gas profiles ######################################
//##########################################################################
namespace gasProfiles
{

PMACC_STRUCT(GaussianCloudParam,
    /** Gas Formula:
     *     exponent = |globalCellPos - center| / sigma
     *     density = e^[ gasFactor * exponent^gasPower ]
     */
    (PMACC_C_VALUE(float_X, gasFactor, -0.5))
    (PMACC_C_VALUE(float_X, gasPower, 2.0))

    /** height of vacuum area on top border
     *
     * this vacuum is important because of the laser initialization,
     * which is done in the first cell of the simulation
     * unit: cells
     */
    (PMACC_C_VALUE(uint32_t, vacuumCellsY, 50))

    /** The central position of the gas distribution
     *  unit: meter
     */
    (PMACC_C_VECTOR_DIM(float_64, simDim, center_SI, 1.024e-5, 9.072e-5, 1.024e-5))

    /** the distance from gasCenter_SI until the gas density decreases to its 1/e-th part
      *  unit: meter */
    (PMACC_C_VECTOR_DIM(float_64, simDim, sigma_SI, 6.0e-6, 6.0e-6, 6.0e-6))
); /* struct GaussianCloudParam */

/* definition of gas cloud profile*/
typedef GaussianCloudImpl<GaussianCloudParam> GaussianCloud;

}//namespace gasProfiles

} //namepsace picongpu
