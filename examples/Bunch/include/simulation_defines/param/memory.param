/**
 * Copyright 2013-2014 Richard Pausch, Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */


#pragma once

#include "math/Vector.hpp"
#include "mappings/kernel/MappingDescription.hpp"

namespace picongpu
{

/* We have to hold back 350MiB for gpu-internal operations:
 *   - random number generator
 *   - reduces
 *   - ...
 */
const size_t totalFreeGpuMemory = 350 *1024*1024;

/* short namespace*/
namespace mCT=PMacc::math::CT;
/** size of a superCell
 *
 * volume of a superCell must be <= 1024
 */
typedef typename mCT::shrinkTo<mCT::Int<8, 8, 4>, simDim>::type SuperCellSize;

/** define the object for mapping superCells to cells*/
typedef MappingDescription<simDim, SuperCellSize> MappingDesc;

const uint32_t GUARD_SIZE = 1;

//! how many bytes for buffer is reserved to communication in one direction
const uint32_t BYTES_EXCHANGE_X = 4 * 256 * 1024; //4 MiB
const uint32_t BYTES_EXCHANGE_Y = 6 * 512 * 1024; //6 MiB
const uint32_t BYTES_EXCHANGE_Z = 4 * 256 * 1024; //4 MiB
const uint32_t BYTES_CORNER = 8 * 1024; //8 kiB;
const uint32_t BYTES_EDGES = 32 * 1024; //32 kiB;
}//namespace picongpu
