/**
 * Copyright 2013 Axel Huebl, Anton Helm, Rene Widera
 *
 * This file is part of PIConGPU. 
 * 
 * PIConGPU is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 * 
 * PIConGPU is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with PIConGPU.  
 * If not, see <http://www.gnu.org/licenses/>. 
 */ 
 

#pragma once


namespace picongpu
{
    /*! Simulation Starter ---------------------------------------------------
     *  - defaultPIConGPU         : default PIConGPU configuration
     */
    namespace simulation_starter = defaultPIConGPU;

    /*! Laser Configuration --------------------------------------------------
     *  - laserNone             : no laser init
     *  - laserGaussianBeam     : Gaussian beam (focusing)
     *  - laserPulseFrontTilt   : Gaussian beam with a tilted pulse envelope 
     *                            in 'x' direction
     *  - laserWavepacket       : wavepacket (gaussian in time and space, not focusing)
     *  - laserPlaneWave        : a plane wave
     */
    namespace laserProfile = laserNone;

    /*! Field Configuration --------------------------------------------------
     *  - fieldSolverYee : standard Yee solver
     *  - fieldSolverLehe: Num. Cherenkov free field solver in y direction
     */
    namespace fieldSolver = fieldSolverYee;


    /*! Gas Configuration-----------------------------------------------------
     * Select a normed gas density profile
     *  - gasGaussian : super - gaussian density profile
     *  - gasGaussianCloud : super - gaussian density profile with a center position
     *  - gasLinExp : piecewise linear-exponential profile (linear first)
     *  - gasHomogenous : constant gas density with a certain length
     *  - gasSphereFlanks : constant sphere droplet with exponential decr envelope
     *  - gasFreeFormula: use a custom formula (slower)
     *  - gasNone : just stay with a vacuum
     */
    namespace gasProfile = gasHomogenous;
    
    /*! Particle Initialization ----------------------------------------------
     *  - particleInitRandomPos  : distribute your particles uniformly random
     *  - particleInitQuietStart : distribute your particles latice-like
     */
    namespace particleInit = particleInitQuietStart;

    /*! particle pusher Configuration ------------------------------------------------------
     * 
     *    - particlePusherNone  : no particle is pushed
     *    - particlePusherVay   : better suited relativistic boris pusher
     *    - particlePusherAxl   : a pusher developed at HZDR during 2011
     *    - particlePusherBoris : standard boris pusher
     */
    namespace particlePusher = particlePusherBoris;
    /*enable (1) or disable (0) ions*/
#define ENABLE_IONS 1
    /*enable (1) or disable (0) electrons*/
#define ENABLE_ELECTRONS 1

    /** select current solver method -----------------------------------------
     *  - currentSolverNgp       :  nearest grid point solver
     *  - currentSolverEsirkepov :  Esirkepov solver for current
     */
    namespace currentSolver = currentSolverEsirkepov;
    /*enable (1) or disable (0) current calculation*/
#define ENABLE_CURRENT 1

}


