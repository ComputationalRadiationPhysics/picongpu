
stages:
  - validate
  - generate
  - compile

.base_generate-reduced-matrix:
  stage: generate
  script:
    - apt update
    - apt install -y python3-pip
    - pip3 install allpairspy
    - $CI_PROJECT_DIR/test/correctBranchPR
    - $CI_PROJECT_DIR/share/ci/git_merge.sh
    - $CI_PROJECT_DIR/share/ci/generate_reduced_matrix.sh -n ${TEST_TUPLE_NUM_ELEM} > compile.yml
    - cat compile.yml
  artifacts:
    paths:
      - compile.yml

# test to rebase the PR to the destination branch and check code style
test-rebase-to-mainline:
  stage: validate
  image: ubuntu:focal
  script:
    - apt update
    - apt install -y -q git curl wget gnupg2
    - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    - echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main" | tee -a /etc/apt/sources.list
    - apt update
    - apt install -y clang-format-11
    # Test if pull request can be merged into the destination branch
    - source $CI_PROJECT_DIR/share/ci/git_merge.sh
    - apt install -y -q python3 python3-pip
    - pip3 install -U flake8 pyflakes
    # Test Python Files for PEP8 conformance
    - flake8 --exclude=thirdParty .
    # Warnings, unused code, etc.
    - pyflakes .
    # Check C++ code style
    - source $CI_PROJECT_DIR/share/ci/check_cpp_code_style.sh
  tags:
    - x86_64

# generate reduced test matrix
# required variables (space separated lists):
#   PIC_INPUTS - path to examples relative to share/picongpu
#                e.g.
#                    "examples" starts one gitlab job per directory in `examples/*`
#                    "examples/" compile all directories in `examples/*` within one gitlab job
#                    "examples/KelvinHelmholtz" compile all cases within one gitlab job
generate-reduced-matrix:
  variables:
    PIC_INPUTS: "examples tests"
    TEST_TUPLE_NUM_ELEM: 1
  extends: ".base_generate-reduced-matrix"

compile-reduced-matrix:
  stage: compile
  trigger:
    include:
      - artifact: compile.yml
        job: generate-reduced-matrix
    strategy: depend
