include:
  - local: '/share/ci/pypicongpu.yml'

stages:
  - validate
  - generate
  - test

variables:
  CONTAINER_TAG: "3.2"

.base_generate-reduced-matrix:
  stage: generate
  variables:
    PIP_BREAK_SYSTEM_PACKAGES: 1
  script:
    - apt update
    - apt install -y python3-pip
    - apt install -y curl
    - pip3 install allpairspy
    - $CI_PROJECT_DIR/share/ci/git_merge.sh
    - $CI_PROJECT_DIR/share/ci/generate_reduced_matrix.sh -n ${TEST_TUPLE_NUM_ELEM} -j 15 > compile.yml
    - cat compile.yml
  artifacts:
    paths:
      - compile.yml
  tags:
    - x86_64
    - cpuonly
  interruptible: true

# pull request validation:
#   - check PR destination
#   - check python code style: flake8, pyflake
#   - rebase the PR to the destination branch
#   - check C++ code style
pull-request-validation:
  stage: validate
  image: ubuntu:focal
  variables:
    PIP_BREAK_SYSTEM_PACKAGES: 1
  script:
    - apt update
    - apt install -y -q git curl wget python3 python3-pip
    # Test if pull request can be merged into the destination branch
    - source $CI_PROJECT_DIR/share/ci/git_merge.sh
    - pip3 install -U -r requirements_pre-commit.txt
    - pre-commit install
    - pre-commit run --all-files --hook-stage manual --show-diff-on-failure
  tags:
    - x86_64
    - cpuonly
  interruptible: true

# generate reduced test matrix
# required variables (space separated lists):
#   PIC_INPUTS - Path to examples relative to share/picongpu.
#                If input is 'pmacc' the folder will be ignored and tests for pmacc will be generated.
#                e.g.
#                    "examples" starts one gitlab job per directory in `examples/*`
#                    "examples/" compile all directories in `examples/*` within one gitlab job
#                    "examples/KelvinHelmholtz" compile all cases within one gitlab job
picongpu-generate-reduced-matrix_examples:
  variables:
    PIC_INPUTS: "examples"
    TEST_TUPLE_NUM_ELEM: 1
    QUICK_CI_TESTS: 1
  extends: ".base_generate-reduced-matrix"

picongpu-compile-reduced-matrix_examples:
  stage: test
  trigger:
    include:
      - artifact: compile.yml
        job: picongpu-generate-reduced-matrix_examples
    strategy: depend

picongpu-generate-reduced-matrix_tests:
  variables:
    PIC_INPUTS: "tests"
    TEST_TUPLE_NUM_ELEM: 1
    QUICK_CI_TESTS: 1
  extends: ".base_generate-reduced-matrix"

picongpu-compile-reduced-matrix_tests:
  stage: test
  trigger:
    include:
      - artifact: compile.yml
        job: picongpu-generate-reduced-matrix_tests
    strategy: depend

picongpu-generate-reduced-matrix_benchmarks:
  variables:
    PIC_INPUTS: "benchmarks"
    TEST_TUPLE_NUM_ELEM: 1
    QUICK_CI_TESTS: 1
  extends: ".base_generate-reduced-matrix"

picongpu-compile-reduced-matrix_benchmarks:
  stage: test
  trigger:
    include:
      - artifact: compile.yml
        job: picongpu-generate-reduced-matrix_benchmarks
    strategy: depend

pmacc-generate-reduced-matrix:
  variables:
    PIC_INPUTS: "pmacc"
    TEST_TUPLE_NUM_ELEM: 1
  extends: ".base_generate-reduced-matrix"

pmacc-compile-reduced-matrix:
  stage: test
  trigger:
    include:
      - artifact: compile.yml
        job: pmacc-generate-reduced-matrix
    strategy: depend

pmacc-header-generate-reduced-matrix:
  variables:
    PIC_INPUTS: "pmacc_header"
    TEST_TUPLE_NUM_ELEM: 1
  extends: ".base_generate-reduced-matrix"

pmacc-header-compile-reduced-matrix:
  stage: test
  trigger:
    include:
      - artifact: compile.yml
        job: pmacc-header-generate-reduced-matrix
    strategy: depend

picongpu-unittest-generate-reduced-matrix:
  variables:
    PIC_INPUTS: "unit"
    TEST_TUPLE_NUM_ELEM: 1
  extends: ".base_generate-reduced-matrix"

picongpu-unittest-compile-reduced-matrix:
  stage: test
  trigger:
    include:
      - artifact: compile.yml
        job: picongpu-unittest-generate-reduced-matrix
    strategy: depend

pypicongpu-generate-full-matrix:
  stage: generate
  image: ubuntu:22.04
  variables:
    PIP_BREAK_SYSTEM_PACKAGES: 1
  script:
    - apt update
    - apt install -y python3 python3-pip
    - pip3 install pyyaml requests typeguard
    - $CI_PROJECT_DIR/share/ci/git_merge.sh
    - python3 $CI_PROJECT_DIR/share/ci/pypicongpu_generator.py $CI_PROJECT_DIR/lib/python/picongpu/picmi/requirements.txt $CI_PROJECT_DIR/lib/python/picongpu/pypicongpu/requirements.txt > compile.yml
    - cat compile.yml
  artifacts:
    paths:
      - compile.yml
  tags:
      - x86_64
  interruptible: true

pypicongpu-full-matrix:
  stage: test
  trigger:
    include:
      - artifact: compile.yml
        job: pypicongpu-generate-full-matrix
    strategy: depend

pypicongpu-compiling-test:
  stage: test
  extends: .base_pypicongpu_compile_test
  variables:
    PIP_BREAK_SYSTEM_PACKAGES: 1
    CI_CONTAINER_NAME: 'ubuntu20.04'
    PYTHON_VERSION: '3.11.*'
    CXX_VERSION: 'g++-11'
    CMAKE_VERSION: '3.25'
    BOOST_VERSION: '1.75.0'
    PYTHON_COMPILING_TEST: 'ON'
