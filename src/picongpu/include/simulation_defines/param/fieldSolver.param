/**
 * Copyright 2013-2017 Axel Huebl, Heiko Burau, Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "fields/currentInterpolation/CurrentInterpolation.def"

/**! Configure the selected field solver method
 *
 * You can set/modify Maxwell solver specific options in the
 * section of each "FieldSolver".
 *
 *
 * \typedef CurrentInterpolation is used to set a method performing the
 * interpolate/assign operation from the generated currents of particle
 * species to the electro-magnetic fields.
 *
 * Allowed values are:
 *   - None<simDim>:
 *     - default for staggered grids/Yee-scheme
 *     - updates E
 *   - Binomial<simDim>: 2nd order Binomial filter
 *     - smooths the current before assignment in staggered grid
 *     - updates E & breaks local charge conservation slightly
 *   - NoneDS<simDim>:
 *     - experimental assignment for all-centered/directional splitting
 *     - updates E & B at the same time
 */
namespace picongpu
{
    namespace fieldSolverNone
    {
        typedef currentInterpolation::None<simDim> CurrentInterpolation;
    }

    namespace fieldSolverYee
    {
        typedef currentInterpolation::None<simDim> CurrentInterpolation;
    }

    namespace fieldSolverYeeNative
    {
        typedef currentInterpolation::None<simDim> CurrentInterpolation;
    }

    namespace fieldSolverDirSplitting
    {
        typedef currentInterpolation::NoneDS<simDim> CurrentInterpolation;
    }

    /**! Lehe Solver
     * The solver proposed by R. Lehe et al
     * in Phys. Rev. ST Accel. Beams 16, 021301 (2013)
     */
    namespace fieldSolverLehe
    {
        class CherenkovFreeDirection_X {};
        class CherenkovFreeDirection_Y {};
        class CherenkovFreeDirection_Z {};

        /*! Distinguish the direction where numerical Cherenkov Radiation
         *  by moving particles shall be suppressed.
         */
        typedef CherenkovFreeDirection_Y CherenkovFreeDir;

        typedef currentInterpolation::None<simDim> CurrentInterpolation;
    }

} // namespace picongpu
