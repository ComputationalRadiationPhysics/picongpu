/**
 * Copyright 2013 Rene Widera
 *
 * This file is part of PIConGPU. 
 * 
 * PIConGPU is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 * 
 * PIConGPU is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with PIConGPU.  
 * If not, see <http://www.gnu.org/licenses/>. 
 */



#pragma once

#include "particles/Identifier.hpp"
#include "compileTime/conversion/MakeSeq.hpp"
#include "dimensions/DataSpace.hpp"
#include "identifier/identifier.hpp"
#include "identifier/alias.hpp"
#include "identifier/value_identifier.hpp"

namespace picongpu
{

class ElectronMethods;
class IonMethods;

/** relative (to cell origin) in-cell position of a particle 
 * With this definition we not define any type like float3,double3,...
 * This is only a name without a specialisation
 */
alias(position);
/** cell index the particle lives in, relative to the moving window origin 
 * This alias is only used for dumping hdf5, the index is only valid for the
 * current timestep.
 */
alias(globalCellIdx);

/** specialisation for the relative in-cell position */
value_identifier(floatD_X,position_pic,floatD_X(0.));
/** momentum at timestep t */
value_identifier(float3_X,momentum,float3_X(0.));
/** momentum at (previous) timestep t-1 */
value_identifier(float3_X,momentumPrev1,float3_X(0.));  
/** weighting of the macro particle */
value_identifier(float_X,weighting,0.0);
/** use this particle for radiation diagnostics */
value_identifier(bool,radiationFlag,false);    
/** specialisation global position inside a domain (relative to origin of the 
 * moving window) 
 * \todo: use simDim (problem is that simDim is defined in componentsConfig.param
 * and is loaded after all other param files)
 */
value_identifier(DataSpace<simDim>,globalCellIdx_pic,DataSpace<simDim>());  

/*The next parts is not nice, we change this in a later update with new interfaces
 * \todo: add compile time methods to create particle species
 */

/** describe attributes of a particle*/
typedef typename MakeSeq<position<position_pic>,momentum,weighting>::type DefaultParticleAttributes;

typedef DefaultParticleAttributes ElectronsDataList;
typedef DefaultParticleAttributes IonsDataList;

/** add methods to particle*/
typedef typename MakeSeq<ElectronMethods>::type ElectronsMethodsList;
typedef typename MakeSeq<IonMethods>::type IonsMethodsList;

} //namespace picongpu
