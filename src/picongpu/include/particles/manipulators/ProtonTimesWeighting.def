/**
 * Copyright 2015-2017 Axel Huebl
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */


#pragma once

namespace picongpu
{
namespace particles
{
namespace manipulators
{

/* Re-scale the weighting of a cloned species by numberOfProtons
 *
 * When derive species from each other, the new
 * species "inherits" the macro-particle weighting
 * of the first one.
 * This functor can be used to manipulate the weighting
 * of the new species' macro particles to be a multiplied by
 * the number of protons on the initial species.
 *
 * As an example, this comes useful when initializing a quasi-neutral,
 * pre-ionized plasma of ions and electrons. Electrons can be created
 * from ions via deriving and increasing their weight to avoid simulating
 * multiple macro electrons per macro ion (with Z>1).
 *
 * note: needs the atomicNumbers flag on the initial species,
 *       used by the GetAtomicNumbers trait.
 */
struct ProtonTimesWeighting;

} //namespace manipulators
} //namespace particles
} //namespace picongpu
