/**
 * Copyright 2013 Axel Huebl, Felix Schmitt, Heiko Burau, Ren√© Widera
 *
 * This file is part of PIConGPU. 
 * 
 * PIConGPU is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 * 
 * PIConGPU is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with PIConGPU.  
 * If not, see <http://www.gnu.org/licenses/>. 
 */



#pragma once

#include "types.h"
#include "simulation_types.hpp"
#include "particles/frame_types.hpp"
#include "simulationControl/MovingWindow.hpp"



namespace picongpu
{

namespace hdf5
{
using namespace PMacc;

using namespace splash;
namespace bmpl = boost::mpl;

namespace po = boost::program_options;

struct ThreadParams
{
    uint32_t currentStep;
    DomainCollector *dataCollector;
    GridLayout<simDim> gridLayout;
    DataSpace<simDim> gridPosition;
    MappingDesc *cellDescription;

    VirtualWindow window;
};

struct DomainInformation
{
    /* offset relative to global origin (first data point)
     * to data from first gpu
     */
    DataSpace<simDim> globalDomainOffset;
    DataSpace<simDim> globalDomainSize;
    /* offset relative to global origin (first data point)
     * to local data
     */
    DataSpace<simDim> domainOffset;
    DataSpace<simDim> domainSize;
    
    /* offset on device*/
    DataSpace<simDim> localDomainOffset;

};

/**
 * Writes simulation data to hdf5 files.
 * Implements the ISimulationIO interface.
 *
 * @param ElectronsBuffer class description for electrons
 * @param IonsBuffer class description for ions
 * @param simDim dimension of the simulation (2-3)
 */

class HDF5Writer;

} //namespace hdf5
} //namespace picongpu

