#!/usr/bin/env bash
#
# Copyright 2017-2020 Axel Huebl
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

# Disallow PRs to `ComputationalRadiationPhysics/picongpu` branch `master`
# if not an other mainline branch such as `dev` or `release-...`
#
# -> only enforced for `master` branch
#    -> only enforced for mainline repo (not for forks)
#
# dependencies: curl, python3
#
# @result 0 if correct target, else 1
#

#!/bin/bash

set -e
set -o pipefail

cd $CI_PROJECT_DIR

is_pr=$(echo "$CI_BUILD_REF_NAME" | grep -q "^pr-" && echo 0 || echo 1)
# merge only pull requests

mainline_slug="ComputationalRadiationPhysics/picongpu"

# only enforced for PRs
if [ $is_pr -eq 0 ]
then
    github_group_repo="ComputationalRadiationPhysics/picongpu"

    pr_id=$(echo "$CI_BUILD_REF_NAME" | cut -d"/" -f1 | cut -d"-" -f2)
    # used a token without any rights from psychocoderHPC to avoid API query limitations
    curl_data=$(curl -u psychocoderHPC:$GITHUB_TOKEN -X GET https://api.github.com/repos/${github_group_repo}/pulls/${pr_id} 2>/dev/null)
    echo "--- curl data ---"
    echo "$curl_data"
    echo "-----------------"
    # get the destination branch
    destination_branch=$(echo "$curl_data" | python3 -c 'import json,sys;obj=json.loads(sys.stdin.read());print(obj["base"]["ref"])')
    echo "destination_branch=${destination_branch}"

    # only enforced for `master` branch
    if [ "$destination_branch" == "master" ]
    then
        repo_slug=$(echo "$curl_data" | python3 -c 'import json,sys;obj=json.loads(sys.stdin.read());print(obj["base"]["repo"]["full_name"])')
        echo "repo_slug=${repo_slug}"
        # only enforced for mainline repo (not for forks)
        if [ "$repo_slug" == "$mainline_slug" ]
        then
            pull_request_slug=$(echo "$curl_data" | python3 -c 'import json,sys;obj=json.loads(sys.stdin.read());print(obj["head"]["repo"]["full_name"])')
            echo "pull_request_slug=${pull_request_slug}"
            # origin repo is not our mainline? so it's a PR from a fork!
            if [ "$pull_request_slug" != "$mainline_slug" ]
            then
                # the PR came from a fork
                pr_label=$(echo "$curl_data" | python3 -c 'import json,sys;obj=json.loads(sys.stdin.read());print(obj["head"]["label"])')
                echo "pr_label=${pr_label}"
                echo ""
                echo "Pull request opened to wrong branch!"
                echo ""
                echo "New features need to go to our 'dev' branch but your"
                echo "pull-request from '"$pull_request_slug"' was"
                echo "sent to 'master' which is only updated by our"
                echo "maintainers for new stable releases."
                echo ""
                echo "Please re-open your pull-request against our 'dev' branch:"
                echo "  https://github.com/ComputationalRadiationPhysics/picongpu/compare/dev...$pr_label?expand=1"
                echo ""
                echo "For further information, please see:"
                echo "  https://github.com/ComputationalRadiationPhysics/picongpu/blob/dev/CONTRIBUTING.md"
                exit 1
            fi
        fi
    fi
fi
