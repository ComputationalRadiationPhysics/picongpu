/* Copyright 2013-2023 Rene Widera, Richard Pausch, Finn-Ole Carstens
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <pmacc/static_assert.hpp>

namespace picongpu
{
    namespace plugins
    {
        namespace transitionRadiation
        {
            //! units for linear frequencies distribution for transition radiation plugin
            namespace linearFrequencies
            {
                constexpr float_X omegaMin = SI::omegaMin * sim.unit.time();
                constexpr float_X omegaMax = SI::omegaMax * sim.unit.time();
                constexpr float_X deltaOmega
                    = (float_X) ((omegaMax - omegaMin) / (float_X) (nOmega - 1)); // difference beween two omega

                constexpr unsigned int blocksizeOmega = numFrameSlots;
                constexpr unsigned int gridsizeOmega = nOmega / blocksizeOmega; // size of grid (dim: x); radiation
            } // namespace linearFrequencies

            //! units for logarithmic frequencies distribution for transition radiation plugin
            namespace logFrequencies
            {
                constexpr float_X omegaMin = (SI::omegaMin * sim.unit.time());
                constexpr float_X omegaMax = (SI::omegaMax * sim.unit.time());

                constexpr unsigned int blocksizeOmega = numFrameSlots;
                constexpr unsigned int gridsizeOmega = nOmega / blocksizeOmega; // size of grid (dim: x); radiation
            } // namespace logFrequencies

            //! units for frequencies from list for transition radiation calculation
            namespace listFrequencies
            {
                constexpr unsigned int blocksizeOmega = numFrameSlots;
                constexpr unsigned int gridsizeOmega = nOmega / blocksizeOmega; // size of grid (dim: x); radiation
            } // namespace listFrequencies
        } // namespace transitionRadiation
    } // namespace plugins
} // namespace picongpu

#include "picongpu/plugins/transitionRadiation/frequencies/LinearFrequencies.hpp"
#include "picongpu/plugins/transitionRadiation/frequencies/ListFrequencies.hpp"
#include "picongpu/plugins/transitionRadiation/frequencies/LogFrequencies.hpp"
