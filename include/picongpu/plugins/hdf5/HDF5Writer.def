/* Copyright 2013-2019 Axel Huebl, Felix Schmitt, Heiko Burau, Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */



#pragma once

#include "picongpu/simulation_types.hpp"
#include <pmacc/particles/frame_types.hpp>
#include "picongpu/simulationControl/MovingWindow.hpp"
#include <splash/splash.h>


namespace picongpu
{

namespace hdf5
{
using namespace pmacc;

using namespace splash;


namespace po = boost::program_options;

struct ThreadParams
{
    /* set at least the pointers to nullptr by default */
    ThreadParams() :
        dataCollector(nullptr),
        cellDescription(nullptr)
    {}

    /** current simulation step */
    uint32_t currentStep;

    /** current dump is a checkpoint */
    bool isCheckpoint;

    /** libSplash class */
    ParallelDomainCollector *dataCollector;

    /** libSplash file's base name */
    std::string h5Filename;

    /** description of the grid/field layout, including guards etc. */
    GridLayout<simDim> gridLayout;

    /** cell description */
    MappingDesc *cellDescription;

    /** window describing the volume to be dumped */
    Window window;

    /** offset from local moving window to local domain */
    DataSpace<simDim> localWindowToDomainOffset;
};

/**
 * Writes simulation data to hdf5 files.
 * Implements the ISimulationPlugin interface.
 */

class HDF5Writer;

} //namespace hdf5
} //namespace picongpu

