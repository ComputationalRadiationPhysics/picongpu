/* Copyright 2013-2019 Rene Widera, Axel Huebl
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>
 */

#pragma once

namespace picongpu
{

    /** Define which operation is used to fill up FieldTmp
     *
     * This is better than use of boost::mtl::pair because
     * we can use this special struct to define functors
     * only for FieldTmp. If we create a second FieldTmp, for example
     * with three components, we can create a new struct (like this)
     * and build a special functor to handle the type.
     */
    template<typename T_Solver, typename T_Species>
    struct FieldTmpOperation
    {
        using Solver = T_Solver;
        using Species = T_Species;

        using LowerMargin = typename Solver::LowerMargin;
        using UpperMargin = typename Solver::UpperMargin;

        static std::string getName()
        {
            std::stringstream str;
            str << T_Species::FrameType::getName();
            str << "_";
            str << T_Solver::getName();
            return str.str();
        }
    };

    /** Tmp (at the moment: scalar) field for plugins and tmp data like
     *  "gridded" particle data (charge density, energy density, ...)
     */
    class FieldTmp;

    /** Electric Field, \see FieldE.hpp */
    class FieldE;

    /** Magnetic Field, \see FieldB.hpp */
    class FieldB;

    /** Current Density j, \see FieldJ.hpp */
    class FieldJ;

} // namespace picongpu
