/* Copyright 2013-2019 Axel Huebl
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <pmacc/types.hpp>


namespace picongpu
{
namespace fields
{
namespace laserProfiles
{
namespace none
{
namespace defaults
{
    struct NoneParam
    {
        /** unit: meter */
        static constexpr float_64 WAVE_LENGTH_SI = 0.0;

        /** unit: Volt / meter */
        static constexpr float_64 AMPLITUDE_SI = 0.0;

        /** unit: s */
        static constexpr float_64 PULSE_LENGTH_SI = 0.0;

        /** unit: cells */
        static constexpr uint32_t initPlaneY = 0u;
    };
} // namespace defaults
} // namespace none

    /** Empty laser profile
     *
     * Does not define a laser profile but provides some hard-coded constants
     * that are accessed directly in some places.
     *
     * @tparam T_Params class parameter to configure the "no laser" profile,
     *                  see members of none::defaults::NoneParam for required
     *                  members
     */
    template< typename T_Params = none::defaults::NoneParam >
    struct None;

} // namespace laserProfiles
} // namespace fields
} // namespace picongpu
