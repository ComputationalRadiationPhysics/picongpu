/* Copyright 2015-2017 Axel Huebl
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

namespace picongpu
{
namespace currentInterpolation
{

/* The standard interpolation for Directional Splitting
 *
 * In the Directional Splitting scheme (see MaxwellSolver and
 * numericalCellTypes
 */
template<uint32_t T_simDim>
struct NoneDS;

} /* namespace currentInterpolation */

namespace traits
{

/* Get margin of the current interpolation
 *
 * This class defines a LowerMargin and an UpperMargin.
 */
template<uint32_t T_dim>
struct GetMargin<picongpu::currentInterpolation::NoneDS<T_dim > >
{
private:
    typedef picongpu::currentInterpolation::NoneDS<T_dim> MyInterpolation;

public:
    typedef typename MyInterpolation::LowerMargin LowerMargin;
    typedef typename MyInterpolation::UpperMargin UpperMargin;
};

} /* namespace traits */

} /* namespace picongpu */
