/* Copyright 2020-2021 Pawel Ordyna
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/unitless/precision.unitless"
#include "picongpu/plugins/externalBeam/Side.def"

/* preprocessor struct generator */
#include <pmacc/preprocessor/struct.hpp>

namespace picongpu
{
    namespace plugins
    {
        namespace xrayScattering
        {
            namespace beam
            {
                using namespace picongpu::plugins::externalBeam;
                /* Choose from:
                 *  - ZSide
                 *  - YSide
                 *  - XSide
                 * - ZRSide
                 * - YRSide
                 * - XRSide
                 */
                using ProbingSide = picongpu::plugins::externalBeam::ZSide;

                PMACC_STRUCT(
                    RotationParam,
                    (PMACC_C_VALUE(float_X, yawAngle, 0))(PMACC_C_VALUE(float_X, pitchAngle, 0)));
            } // namespace beam
        } // namespace xrayScattering
    } // namespace plugins
} // namespace picongpu
