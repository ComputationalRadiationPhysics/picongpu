/* Copyright 2014-2019 Axel Huebl, Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

/** @file
 *
 * Configure the pseudorandom number generator (PRNG).
 * Allows to select method and global seeds in order to vary the
 * initial state of the parallel PRNG.
 */

#pragma once

#include "picongpu/random/seed/Seed.hpp"

#include <pmacc/random/methods/methods.hpp>


namespace picongpu
{
namespace random
{
    /** Random number generation methods
     *
     * It is not allowed to change the method and restart an already existing checkpoint.
     *
     *  - pmacc::random::methods::XorMin
     *  - pmacc::random::methods::MRG32k3aMin
     *  - pmacc::random::methods::AlpakaRand
     */
    using Generator =  pmacc::random::methods::XorMin< >;

    /** random number start seed
     *
     * Generator to create a seed for the random number generator.
     * Depending of the generator the seed is reproducible or
     * or changed with each program execution.
     *
     *   - seed::Value< 42 >
     *   - seed::FromTime
     *   - seed::FromEnvironment
     */
    using SeedGenerator = seed::Value< 42 > ;
} // namespace random
} // namespace picongpu
