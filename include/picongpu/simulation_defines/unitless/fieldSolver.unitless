/* Copyright 2013-2017 Axel Huebl, Heiko Burau, Rene Widera, Benjamin Worpitz
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */



#pragma once

#include "picongpu/fields/MaxwellSolver/None/NoSolver.def"
#include "picongpu/fields/MaxwellSolver/Yee/YeeSolver.def"
#if(SIMDIM==DIM3)
#if( PMACC_CUDA_ENABLED == 1 )
#   include "picongpu/fields/MaxwellSolver/DirSplitting/DirSplitting.def"
#endif
#include "picongpu/fields/MaxwellSolver/Lehe/LeheSolver.def"
#endif

#include "picongpu/fields/numericalCellTypes/NumericalCellTypes.hpp"


namespace picongpu
{

namespace fieldSolverNone
{
    typedef picongpu::noSolver::NoSolver FieldSolver;
    namespace numericalCellType = yeeCell;
}

namespace fieldSolverYeeNative
{
    typedef picongpu::yeeSolver::YeeSolver<> FieldSolver;
    namespace numericalCellType = yeeCell;
}

namespace fieldSolverYee
{
    typedef picongpu::yeeSolver::YeeSolver<> FieldSolver;
    namespace numericalCellType = yeeCell;
}

#if(SIMDIM==DIM3)
#if( PMACC_CUDA_ENABLED == 1 )
namespace fieldSolverDirSplitting
{
    typedef picongpu::dirSplitting::DirSplitting FieldSolver;
    namespace numericalCellType = emfCenteredCell;
}
#endif

namespace fieldSolverLehe
{
    typedef picongpu::leheSolver::LeheSolver FieldSolver;
    namespace numericalCellType = yeeCell;
}
#endif
} //namespace picongpu
