/* Copyright 2017-2019 Axel Huebl
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <pmacc/static_assert.hpp>


namespace picongpu
{
namespace densityProfiles
{
    /** A density profile which only initializes each nth cell
     *
     * Useful to initialize probe particles or material dopings. The result is
     * either 0 (no particle) or the full density. The result of this particular
     * functor can be larger 1.0 with T_SkipCells::toRT().productOfComponents()
     * in order to properly fulfill the density of a species via increased
     * weighting.
     *
     * @tparam T_SkipCells The period for the number of cells to skip for each
     *                     direction before initializing a particle. Signature
     *                     of a pmacc::math::CT::UInt32
     */
    template<
        typename T_SkipCells
    >
    struct EveryNthCellImpl
    {
        // note: `sizeof(ANY_TYPE) != 0` defers the evaluation
        PMACC_CASSERT_MSG_TYPE(
            __Density_Profile_EveryNthCellImpl_expects_a_PMacc_math_CT_UInt32,
            T_SkipCells,
            false && sizeof( T_SkipCells ) != 0
        );
    };

} // namespace densityProfiles
} // namespace picongpu
