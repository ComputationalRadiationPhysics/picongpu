/* Copyright 2014-2019 Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <pmacc/functor/Filtered.hpp>
#include <pmacc/functor/Interface.hpp>
#include <pmacc/filter/Interface.hpp>
#include "picongpu/particles/filter/filter.def"
#include <pmacc/filter/operators/And.hpp>

namespace picongpu
{
namespace particles
{
namespace filter
{

    /** interface for a unary particle filter
     *
     * @tparam T_UnaryFilter unary particle filter must contain `bool operator()(P && particle)`
     */
    template<
        typename T_UnaryFilter
    >
    using IUnary = pmacc::filter::Interface<
        T_UnaryFilter,
        1u
    >;

} // namespace filter
} // namespace particles
} // namespace picongpu
