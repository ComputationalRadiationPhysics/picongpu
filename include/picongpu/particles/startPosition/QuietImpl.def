/* Copyright 2014-2019 Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/simulation_defines.hpp"
#include "picongpu/particles/startPosition/generic/Free.def"

#include <boost/mpl/integral_c.hpp>


namespace picongpu
{
namespace particles
{
namespace startPosition
{
namespace acc
{

    /** Set the in cell position (accelerator)
     *
     * Set the in cell position and the weighting of the macro particle.
     */
    template< typename T_ParamClass >
    struct QuietImpl;

} // namespace acc


    /** Set the in cell position
     *
     * The position of the particle is chosen depending of the number of
     * macro particles within the cell so that the distance to the next particle
     * is equal.
     */
    template< typename T_ParamClass >
    using QuietImpl = generic::Free< acc::QuietImpl< T_ParamClass > >;

} // namespace startPosition
} // namespace particles
} // namespace picongpu
