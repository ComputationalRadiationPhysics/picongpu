/* Copyright 2015-2019 Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/simulation_defines.hpp"

#include <boost/mpl/integral_c.hpp>
#include <boost/mpl/placeholders.hpp>


namespace picongpu
{
namespace particles
{
namespace startPosition
{
namespace generic
{

    /** call simple free user defined functor and provide a random number generator
     *
     *
     * @tparam T_Functor user defined unary functor
     * @tparam T_Distribution pmacc::random::distributions, random number distribution
     */
    template<
        typename T_Functor,
        typename T_Distribution
    >
    struct FreeRng;

} // namespace generic
} // namespace startPosition
} // namespace particles
} // namespace picongpu
