/* Copyright 2014-2021 Rene Widera, Pawel Ordyna
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/particles/startPosition/generic/FreeBoundary.def"
#include "picongpu/particles/externalBeam/phase/NoPhase.def"

namespace picongpu
{
    namespace particles
    {
        namespace externalBeam
        {
            namespace acc
            {
                /** Set the in cell position (accelerator)
                 *
                 * Set the in cell position and the weighting of the macro particle.
                 */
                template<typename T_StartPositionFunctor, typename T_MomentumFunctor, typename T_PhaseFunctor>
                struct StartAttributesImpl;

            } // namespace acc


            /** Set the in cell position
             *
             * The position of the particle is chosen depending of the number of
             * macro particles within the cell so that the distance to the next particle
             * is equal.
             */
            template<
                typename T_StartPositionFunctor,
                typename T_MomentumFunctor,
                typename T_PhaseFunctor = initPhase::NoPhase>
            using StartAttributesImpl = particles::startPosition::generic::FreeBoundary<
                acc::StartAttributesImpl<T_StartPositionFunctor, T_MomentumFunctor, T_PhaseFunctor>>;

        } // namespace externalBeam
    } // namespace particles
} // namespace picongpu
