/* Copyright 2020-2023 Pawel Ordyna
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

namespace picongpu
{
    namespace particles
    {
        namespace externalBeam
        {
            namespace beam
            {
                namespace beamShapes
                {
                    /** Gaussian temporal envelope
                     * @tparam T_ParamClass ParamClass Example configuration:
                     * @code{.cpp}
                     *      struct GaussianPulseParam
                     *      {
                     *          // cut the pulse cutTimeFront_SI before the pulse maximum if true
                     *          static constexpr bool limitStart = false;
                     *          // cut the pulse at cutTimeBack_SI after the pulse maximum if true
                     *          static constexpr bool limitEnd = false;
                     *          static constexpr float_64 FWHM_SI = 30e-15; // 30fs
                     *
                     *          static constexpr float_64 cutTimeFront_SI = 3.0 * FWHM_SI;
                     *          static constexpr float_64 cutTimeBack_SI = 3.0 * FWHM_SI;
                     *          // when 0 the pulse max is at the beam origin at t_sim = 0
                     *          static constexpr float_64 timeOffset_SI = 0.0;
                     *      };
                     *  @endcode
                     */
                    template<typename T_ParamClass>
                    struct GaussianPulse;
                } // namespace beamShapes
            } // namespace beam
        } // namespace externalBeam
    } // namespace particles
} // namespace picongpu
