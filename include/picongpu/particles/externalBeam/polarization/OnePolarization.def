/* Copyright 2021-2023 Pawel Ordyna
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

namespace picongpu
{
    namespace particles
    {
        namespace externalBeam
        {
            namespace polarization
            {
                /** Set the particle polarization. One value for a all particles.
                 *
                 * @tparam T_Param param class. Must define the polarization value (-PI, + PI].
                 *  Example:
                 *  @code{cpp}
                 *  struct T_Param
                 *  {
                 *      static constexpr float_X polarization{pmacc::math::Pi<float_X>::value /2.0_X};
                 *  };
                 *  @endcode
                 *
                 */
                template<typename T_Param>
                struct OnePolarization;

            } // namespace polarization
        } // namespace externalBeam
    } // namespace particles
} // namespace picongpu
