/* Copyright 2014-2019 Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/particles/manipulators/generic/Free.def"
#include <pmacc/nvidia/functors/Add.hpp>


namespace picongpu
{
namespace particles
{
namespace manipulators
{
namespace unary
{
namespace param
{
    CONST_VECTOR(
        float_X,
        3,
        DriftNegative_direction,
        -1.0,
        0.0,
        0.0
    );

    //! configuration for the unary manipulator functor Drift
    struct DriftCfg
    {
        /** Initial particle drift velocity for electrons and ions
         *  Examples:
         *    - No drift is equal to 1.0
         *  unit: none
         */
        static constexpr float_64 gamma = 1.021;
        DriftNegative_direction_t const direction;
    };
} // namespace param

namespace acc
{
    template<
        typename T_ParamClass,
        typename T_ValueFunctor
    >
    struct Drift;
} // namespace acc

    /** change particle's momentum based on speed
     *
     * allow to manipulate a speed to a particle
     *
     * @tparam T_ParamClass param::DriftCfg, configuration parameter
     * @tparam T_ValueFunctor pmacc::nvidia::functors::*,  binary functor type to manipulate the momentum attribute
     */
    template<
        typename T_ParamClass = param::DriftCfg,
        typename T_ValueFunctor = pmacc::nvidia::functors::Add
    >
    using Drift = generic::Free<
        acc::Drift<
            T_ParamClass,
            T_ValueFunctor
        >
    >;

} // namespace unary
} // namespace manipulators
} // namespace particles
} // namespace picongpu
