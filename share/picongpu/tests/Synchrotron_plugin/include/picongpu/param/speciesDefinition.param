/* Copyright 2013-2023 Rene Widera, Marco Garten, Richard Pausch,
 *                     Benjamin Worpitz, Axel Huebl
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once


#include "picongpu/particles/Particles.hpp"

#include <pmacc/identifier/value_identifier.hpp>
#include <pmacc/meta/String.hpp>
#include <pmacc/meta/conversion/MakeSeq.hpp>
#include <pmacc/particles/Identifier.hpp>
#include <pmacc/particles/traits/FilterByFlag.hpp>


namespace picongpu
{
    /*########################### define particle attributes #####################*/

    /** describe attributes of a particle*/
    using DefaultParticleAttributes = MakeSeq_t<position<position_pic>, momentum, weighting>;

    /*########################### end particle attributes ########################*/

    /*########################### define species #################################*/


    /*--------------------------- photons  --------------------------------------*/
    value_identifier(float_X, MassRatioPhoton, 0.0);
    value_identifier(float_X, ChargeRatioPhoton, 0.0);

    using ParticleFlagsPhotons = MakeSeq_t<
        // particlePusher<particles::pusher::Photon>,
        shape<UsedParticleShape>,
        interpolation<UsedField2Particle>,
        massRatio<MassRatioPhoton>,
        chargeRatio<ChargeRatioPhoton>>;

    using PIC_Photons = Particles<PMACC_CSTRING("y"), ParticleFlagsPhotons, DefaultParticleAttributes>;


    /*--------------------------- electrons --------------------------------------*/

    /* ratio relative to base charge and base mass */
    value_identifier(float_X, MassRatioElectrons, 1.0);
    value_identifier(float_X, ChargeRatioElectrons, 1.0);

    using ParticleFlagsElectrons = MakeSeq_t<
        // particlePusher<UsedParticlePusher>,
        shape<UsedParticleShape>,
        interpolation<UsedField2Particle>,
        // current<UsedParticleCurrentSolver>,
        massRatio<MassRatioElectrons>,
        chargeRatio<ChargeRatioElectrons>,

        synchrotron<PIC_Photons>>;

    /* define species: electrons */
    using PIC_Electrons = Particles<PMACC_CSTRING("e"), ParticleFlagsElectrons, DefaultParticleAttributes>;


    using VectorAllSpecies = MakeSeq_t<PIC_Electrons, PIC_Photons>;

} // namespace picongpu
