#!/usr/bin/env bash
#
# Copyright 2013-2023 Axel Huebl, Rene Widera, Sergei Bastrakov
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

#
# generic compile options
#

################################################################################
# add presets here
#   - default: index 0
#   - start with zero index
#   - increase by 1, no gaps

# Pushers are generally independent from particle shapes, so do not attempt to
# test all possible combinations, just all pushers except Boris (tested in examples)
flags[0]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=HigueraCary;-DPARAM_PARTICLESHAPE=NGP'"
flags[1]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=Vay;-DPARAM_PARTICLESHAPE=CIC'"
flags[2]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=ReducedLandauLifshitz;-DPARAM_PARTICLESHAPE=TSC'"
flags[3]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=Boris;-DPARAM_COMPOSITEPUSHER=1;-DPARAM_PARTICLESHAPE=PQS'"
flags[4]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=HigueraCary;-DPARAM_COMPOSITEPUSHER=1;-DPARAM_PARTICLESHAPE=PCS'"
flags[5]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=Free;-DPARAM_PARTICLESHAPE=CIC'"
flags[6]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=Photon;-DPARAM_PARTICLESHAPE=TSC'"
flags[7]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=Probe;-DPARAM_PARTICLESHAPE=PQS'"
flags[8]="-DPARAM_OVERWRITES:LIST='-DPARAM_PARTICLEPUSHER=Acceleration;-DPARAM_PARTICLESHAPE=NGP'"

################################################################################
# execution

case "$1" in
    -l)  echo ${#flags[@]}
         ;;
    -ll) for f in "${flags[@]}"; do echo $f; done
         ;;
    *)   echo -n ${flags[$1]}
         ;;
esac
