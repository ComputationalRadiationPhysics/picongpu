# Copyright 2013-2020 Axel Huebl, Rene Widera, Felix Schmitt
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

##
## This configuration file is used by PIConGPU's TBG tool to create a
## batch script for PIConGPU runs. For a detailed description of PIConGPU
## configuration files including all available variables, see
##
##                      docs/TBG_macros.cfg
##


#################################
## Section: Required Variables ##
#################################

#Walltime of simulation
TBG_wallTime="24:00:00"

#Number of devices per dimension
TBG_devices_x=1
TBG_devices_y=1
TBG_devices_z=1

#size of simulation grid as "X Y Z"
TBG_gridSize="24 24 12"

#Number of time steps
TBG_steps="10"

#Persiodix Boundary Conditions "X Y Z"
TBG_periodic="--periodic 1 1 1"

#################################
## Section: Optional Variables ##
#################################

# Create a particle-energy histogram [in keV] for species "e" for every step
TBG_eth_histogram="--eth_energyHistogram.period 1 --eth_energyHistogram.filter all  --eth_energyHistogram.binCount 1024    \
                 --eth_energyHistogram.minEnergy 0 --eth_energyHistogram.maxEnergy 500000"

TBG_plugins="!TBG_eth_histogram"


# Calculate a 2D phase space
# - requires parallel libSplash for HDF5 output
# - momentum range in m_<species> c
TBG_eth_PSxpx="--eth_phaseSpace.period 10 --eth_phaseSpace.filter all --eth_phaseSpace.space x --eth_phaseSpace.momentum px --eth_phaseSpace.min -1.0 --eth_phaseSpace.max 1.0"
TBG_eth_PSxpz="--eth_phaseSpace.period 10 --eth_phaseSpace.filter all --eth_phaseSpace.space x --eth_phaseSpace.momentum pz --eth_phaseSpace.min -1.0 --eth_phaseSpace.max 1.0"
TBG_eth_PSypx="--eth_phaseSpace.period 10 --eth_phaseSpace.filter all --eth_phaseSpace.space y --eth_phaseSpace.momentum px --eth_phaseSpace.min -1.0 --eth_phaseSpace.max 1.0"
TBG_eth_PSypy="--eth_phaseSpace.period 10 --eth_phaseSpace.filter all --eth_phaseSpace.space y --eth_phaseSpace.momentum py --eth_phaseSpace.min -1.0 --eth_phaseSpace.max 1.0"
TBG_eth_PSypz="--eth_phaseSpace.period 10 --eth_phaseSpace.filter all --eth_phaseSpace.space y --eth_phaseSpace.momentum pz --eth_phaseSpace.min -1.0 --eth_phaseSpace.max 1.0"

# Dump simulation data (fields and particles) via the openPMD API.
# Data is dumped every .period steps to the fileset .file.
TBG_openPMD="--openPMD.period 1   \
             --openPMD.file simOutput \
             --openPMD.ext bp \
             --openPMD.json '{ \"adios2\": { \"engine\": { \"type\": \"file\", \"parameters\": { \"BufferGrowthFactor\": \"1.2\", \"InitialBufferSize\": \"2GB\" } } } }'"
# Further control over the backends used in the openPMD plugins is available
# through the mechanisms exposed by the openPMD API:
# * environment variables
# * JSON-formatted configuration string
# Further information on both is retrieved from the official documentation
# https://openpmd-api.readthedocs.io
# Notice that specifying compression settings via --openPMD.compression
# is considered legacy and backend-specific settings via the JSON string are
# preferred if available for a backend.

# Create a checkpoint that is restartable every --checkpoint.period steps
#   http://git.io/PToFYg
TBG_checkpoint="--checkpoint.period 5"
# Select the backend for the checkpoint, available are hdf5 and adios
#    --checkpoint.backend adios
#                         hdf5
# Available backend options are exactly as in --adios.* and --hdf5.* and can be set
# via:
#   --checkpoint.<IO-backend>.* <value>
# e.g.:
#   --checkpoint.adios.compression zlib
#   --checkpoint.adios.disable-meta 1
# Note: if you disable ADIOS meta files in checkpoints, make sure to run
#       `bpmeta` on your checkpoints before restarting from them!

#################################
## Section: Program Parameters ##
#################################

TBG_deviceDist="!TBG_devices_x !TBG_devices_y !TBG_devices_z"

TBG_programParams="-d !TBG_deviceDist \
                   -g !TBG_gridSize   \
                   -s !TBG_steps      \
                   !TBG_plugins       \
                   --versionOnce"

# TOTAL number of devices
TBG_tasks="$(( TBG_devices_x * TBG_devices_y * TBG_devices_z ))"

"$TBG_cfgPath"/submitAction.sh
