/* Copyright 2014-2019 Rene Widera, Richard Pausch
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/particles/shapes.hpp"
#include "picongpu/algorithms/FieldToParticleInterpolationNative.hpp"
#include "picongpu/algorithms/FieldToParticleInterpolation.hpp"
#include "picongpu/algorithms/AssignedTrilinearInterpolation.hpp"

#include "picongpu/particles/flylite/NonLTE.def"
#include "picongpu/fields/currentDeposition/Solver.def"


namespace picongpu
{
/*---------------------------- generic solver---------------------------------*/

/*! Particle Shape definitions -------------------------------------------------
 *  - particles::shapes::CIC : 1st order
 *  - particles::shapes::TSC : 2nd order
 *  - particles::shapes::PCS : 3rd order
 *  - particles::shapes::P4S : 4th order
 *
 *  example: using UsedParticleShape = particles::shapes::CIC;
 */
using UsedParticleShape = particles::shapes::CIC;

/* define which interpolation method is used to interpolate fields to particle*/
using UsedField2Particle = FieldToParticleInterpolation< UsedParticleShape, AssignedTrilinearInterpolation >;

/*! select current solver method -----------------------------------------------
 * - currentSolver::Esirkepov<SHAPE>  : particle shapes - CIC, TSC, PCS, P4S (1st to 4th order)
 * - currentSolver::VillaBune<>       : particle shapes - CIC (1st order) only
 * - currentSolver::EmZ<SHAPE>        : particle shapes - CIC, TSC, PCS, P4S (1st to 4th order)
 *
 * For development purposes: ---------------------------------------------------
 * - currentSolver::EsirkepovNative<SHAPE> : generic version of currentSolverEsirkepov
 *   without optimization (~4x slower and needs more shared memory)
 */
using UsedParticleCurrentSolver = currentSolver::Esirkepov< UsedParticleShape >;

/*! particle pusher configuration ----------------------------------------------
 *
 * Defining a pusher is optional for particles
 *
 * - particles::pusher::Vay : better suited relativistic boris pusher
 * - particles::pusher::Boris : standard boris pusher
 * - particles::pusher::ReducedLandauLifshitz : 4th order RungeKutta pusher
 *                                              with classical radiation reaction
 *
 * For diagnostics & modeling: ------------------------------------------------
 * - particles::pusher::Free : free propagation, ignore fields
 *                             (= free stream model)
 * - particles::pusher::Photon : propagate with c in direction of normalized mom.
 * - particles::pusher::Probe : Probe particles that interpolate E & B
 * For development purposes: --------------------------------------------------
 * - particles::pusher::Axel : a pusher developed at HZDR during 2011 (testing)
 */
using UsedParticlePusher = particles::pusher::Boris;

} // namespace picongpu
