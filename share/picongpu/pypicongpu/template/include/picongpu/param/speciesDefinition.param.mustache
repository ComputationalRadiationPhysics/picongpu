/* Copyright 2013-2024 Rene Widera, Benjamin Worpitz, Heiko Burau,
 *                     Hannes Troepgen
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/simulation_defines.hpp"

#include "picongpu/particles/Particles.hpp"

#include <pmacc/identifier/value_identifier.hpp>
#include <pmacc/meta/String.hpp>
#include <pmacc/meta/conversion/MakeSeq.hpp>
#include <pmacc/particles/Identifier.hpp>
#include <pmacc/particles/traits/FilterByFlag.hpp>

namespace picongpu
{
    {{#species_initmanager.species}}
        /****************************************
            Definition of Species {{{name}}}
        ****************************************/

        {{#constants}}
            {{#mass}}
                value_identifier(float_X, MassRatio_{{{typename}}}, {{{mass_si}}} / SI::BASE_MASS_SI);
            {{/mass}}
            {{#charge}}
                value_identifier(float_X, ChargeRatio_{{{typename}}}, {{{charge_si}}} / SI::BASE_CHARGE_SI);
            {{/charge}}
            {{#density_ratio}}
                value_identifier(float_X, DensityRatio_{{{typename}}}, {{{ratio}}});
            {{/density_ratio}}
        {{/constants}}

        using ParticleFlags_{{{typename}}} = MakeSeq_t<
            {{! note: put defaults at end, s.t. that generated section may always safely end in comma }}
            {{#constants}}
                {{#mass}}
                    massRatio<MassRatio_{{{typename}}}>,
                {{/mass}}
                {{#charge}}
                    chargeRatio<ChargeRatio_{{{typename}}}>,
                {{/charge}}
                {{#density_ratio}}
                    densityRatio<DensityRatio_{{{typename}}}>,
                {{/density_ratio}}

                {{#ionizers}}
                    ionizers<MakeSeq_t<
                            {{#type.BSIEffectiveZ}}
                                particles::ionization::BSIEffectiveZ<{{{ionizers.data.ionization_electron_species.typename}}}, particles::ionization::current::None>
                                {{{^ionizers.data.last}}}
                                ,
                                {{{/ionizers.data.last}}}
                            {{/type.BSIEffectiveZ}}
                            {{#type.ADKCircPol}}
                                particles::ionization::ADKCircPol<{{{ionizers.data.ionization_electron_species.typename}}}, particles::ionization::current::None>,
                                {{{^ionizers.data.last}}}
                                ,
                                {{{/ionizers.data.last}}}
                            {{/type.ADKCircPol}}
                            {{#type.ADKLinPol}}
                                particles::ionization::ADKLinPol<{{{ionizers.data.ionization_electron_species.typename}}}, particles::ionization::current::None>,
                                {{{^ionizers.data.last}}}
                                ,
                                {{{/ionizers.data.last}}}
                            {{/type.ADKLinPol}}
                            {{#type.BSI}}
                                particles::ionization::BSI<{{{ionizers.data.ionization_electron_species.typename}}}, particles::ionization::current::None>,
                                {{{^ionizers.data.last}}}
                                ,
                                {{{/ionizers.data.last}}}
                            {{/type.BSI}}
                            {{#type.BSIStarkShifted}}
                                particles::ionization::BSIStarkShifted<{{{ionizers.data.ionization_electron_species.typename}}}, particles::ionization::current::None>,
                                {{{^ionizers.data.last}}}
                                ,
                                {{{/ionizers.data.last}}}
                            {{/type.BSIStarkShifted}}
                            {{#type.Keldysh}}
                                particles::ionization::Keldysh<{{{ionizers.data.ionization_electron_species.typename}}}, particles::ionization::current::None>,
                                {{{^ionizers.data.last}}}
                                ,
                                {{{/ionizers.data.last}}}
                            {{/type.Keldysh}}
                            {{#type.ThomasFermi}}
                                particles::ionization::ThomasFermi<{{{ionizers.data.ionization_electron_species.typename}}}>,
                            {{/type.ThomasFermi}}
                        >>,
                {{/ionizers}}

                {{#element_properties}}
                    atomicNumbers<ionization::atomicNumbers::{{{element.picongpu_name}}}_t>,
                    ionizationEnergies<ionization::energies::AU::{{{element.picongpu_name}}}_t>,
                {{/element_properties}}
            {{/constants}}

            particlePusher<UsedParticlePusher>,
            shape<UsedParticleShape>,
            interpolation<UsedField2Particle>,
            current<UsedParticleCurrentSolver>>;

        using ParticleAttributes_{{{typename}}} = MakeSeq_t<
            {{#attributes}}
                {{{picongpu_name}}}
                {{^_last}}
                    ,
                {{/_last}}
            {{/attributes}}
            >;

        using {{{typename}}} = Particles<
            PMACC_CSTRING("{{{name}}}"),
            ParticleFlags_{{{typename}}},
            ParticleAttributes_{{{typename}}}>;
    {{/species_initmanager.species}}


    using VectorAllSpecies = MakeSeq_t<
        {{#species_initmanager.species}}
            {{{typename}}}
            {{^_last}}
                ,
            {{/_last}}
        {{/species_initmanager.species}}
        >;
} // namespace picongpu
